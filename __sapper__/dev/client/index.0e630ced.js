import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_each_argument, a as validate_slots, e as empty, b as insert_dev, c as detach_dev, f as space, g as element, t as text, h as svg_element, q as query_selector_all, j as claim_space, k as claim_element, l as children, m as claim_text, n as attr_dev, o as add_location, p as set_style, r as append_dev, u as add_render_callback, w as create_in_transition, x as create_out_transition, y as destroy_each, z as noop } from './client.416d1dad.js';
import { f as fade, a as fly } from './index.35d5c276.js';
import { m as me } from './me.6da87f02.js';

/* src/routes/index.svelte generated by Svelte v3.23.2 */
const file = "src/routes/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	return child_ctx;
}

// (46:5) {#if socialNetwork.url }
function create_if_block(ctx) {
	let a;
	let svg;
	let title;
	let t0_value = /*socialNetwork*/ ctx[0].title + "";
	let t0;
	let path;
	let path_d_value;
	let svg_class_value;
	let t1;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			svg = svg_element("svg");
			title = svg_element("title");
			t0 = text(t0_value);
			path = svg_element("path");
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true, target: true });
			var a_nodes = children(a);

			svg = claim_element(
				a_nodes,
				"svg",
				{
					class: true,
					role: true,
					viewBox: true,
					xmlns: true
				},
				1
			);

			var svg_nodes = children(svg);
			title = claim_element(svg_nodes, "title", {}, 1);
			var title_nodes = children(title);
			t0 = claim_text(title_nodes, t0_value);
			title_nodes.forEach(detach_dev);
			path = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(title, file, 48, 8, 3740);
			attr_dev(path, "d", path_d_value = /*socialNetwork*/ ctx[0].svg);
			add_location(path, file, 49, 8, 3787);
			attr_dev(svg, "class", svg_class_value = "h-6 fill-current text-gray-600 hover:" + /*socialNetwork*/ ctx[0].color);
			attr_dev(svg, "role", "img");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg, file, 47, 7, 3593);
			attr_dev(a, "class", "link");
			attr_dev(a, "href", a_href_value = /*socialNetwork*/ ctx[0].url);
			attr_dev(a, "target", "_blank");
			add_location(a, file, 46, 6, 3528);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, svg);
			append_dev(svg, title);
			append_dev(title, t0);
			append_dev(svg, path);
			append_dev(a, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(46:5) {#if socialNetwork.url }",
		ctx
	});

	return block;
}

// (45:4) {#each me.socialNetworks as socialNetwork }
function create_each_block(ctx) {
	let if_block_anchor;
	let if_block = /*socialNetwork*/ ctx[0].url && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*socialNetwork*/ ctx[0].url) if_block.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(45:4) {#each me.socialNetworks as socialNetwork }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t0;
	let div7;
	let div0;
	let img;
	let img_src_value;
	let t1;
	let div6;
	let div5;
	let div1;
	let t2;
	let h1;
	let t3_value = me.profession + "";
	let t3;
	let t4;
	let div2;
	let t5;
	let p0;
	let svg0;
	let path0;
	let t6;
	let t7_value = me.location + "";
	let t7;
	let t8;
	let p1;
	let t9_value = me.intro + "";
	let t9;
	let t10;
	let div3;
	let a;
	let span;
	let t11;
	let t12;
	let svg1;
	let path1;
	let t13;
	let div4;
	let div7_intro;
	let div7_outro;
	let current;
	document.title = title_value = me.name;
	let each_value = me.socialNetworks;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			div7 = element("div");
			div0 = element("div");
			img = element("img");
			t1 = space();
			div6 = element("div");
			div5 = element("div");
			div1 = element("div");
			t2 = space();
			h1 = element("h1");
			t3 = text(t3_value);
			t4 = space();
			div2 = element("div");
			t5 = space();
			p0 = element("p");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t6 = space();
			t7 = text(t7_value);
			t8 = space();
			p1 = element("p");
			t9 = text(t9_value);
			t10 = space();
			div3 = element("div");
			a = element("a");
			span = element("span");
			t11 = text("Contact me");
			t12 = space();
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t13 = space();
			div4 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-sq2wwz\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div7 = claim_element(nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div0 = claim_element(div7_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, class: true, alt: true });
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { id: true, class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div1 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			children(div1).forEach(detach_dev);
			t2 = claim_space(div5_nodes);
			h1 = claim_element(div5_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t3 = claim_text(h1_nodes, t3_value);
			h1_nodes.forEach(detach_dev);
			t4 = claim_space(div5_nodes);
			div2 = claim_element(div5_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			p0 = claim_element(div5_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			svg0 = claim_element(p0_nodes, "svg", { class: true, xmlns: true, viewBox: true }, 1);
			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t6 = claim_space(p0_nodes);
			t7 = claim_text(p0_nodes, t7_value);
			p0_nodes.forEach(detach_dev);
			t8 = claim_space(div5_nodes);
			p1 = claim_element(div5_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t9 = claim_text(p1_nodes, t9_value);
			p1_nodes.forEach(detach_dev);
			t10 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			a = claim_element(div3_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t11 = claim_text(span_nodes, "Contact me");
			span_nodes.forEach(detach_dev);
			t12 = claim_space(a_nodes);

			svg1 = claim_element(
				a_nodes,
				"svg",
				{
					class: true,
					role: true,
					viewBox: true,
					xmlns: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t13 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div4_nodes);
			}

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "images/foto-mobile.jpg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "class", "rounded-none lg:rounded-full shadow-2xl hidden lg:block");
			attr_dev(img, "alt", "FOTO");
			add_location(img, file, 18, 2, 467);
			attr_dev(div0, "class", "w-full lg:w-2/5");
			add_location(div0, file, 16, 1, 383);
			attr_dev(div1, "class", "block lg:hidden rounded-full shadow-xl mx-auto -mt-16 h-48 w-48 bg-cover bg-center");
			set_style(div1, "background-image", "url('images/foto-mobile.jpg')");
			add_location(div1, file, 27, 3, 905);
			attr_dev(h1, "class", "text-3xl font-bold pt-8 lg:pt-0");
			add_location(h1, file, 29, 3, 1071);
			attr_dev(div2, "class", "mx-auto w-4/5 pt-3 border-b-2 border-teal-500 opacity-25");
			add_location(div2, file, 30, 3, 1141);
			attr_dev(path0, "d", "M19.527 4.799c1.212 2.608.937 5.678-.405 8.173-1.101 2.047-2.744 3.74-4.098 5.614-.619.858-1.244 1.75-1.669 2.727-.141.325-.263.658-.383.992-.121.333-.224.673-.34 1.008-.109.314-.236.684-.627.687h-.007c-.466-.001-.579-.53-.695-.887-.284-.874-.581-1.713-1.019-2.525-.51-.944-1.145-1.817-1.79-2.671L19.527 4.799zM8.545 7.705l-3.959 4.707c.724 1.54 1.821 2.863 2.871 4.18.247.31.494.622.737.936l4.984-5.925-.029.01c-1.741.601-3.691-.291-4.392-1.987a3.377 3.377 0 0 1-.209-.716c-.063-.437-.077-.761-.004-1.198l.001-.007zM5.492 3.149l-.003.004c-1.947 2.466-2.281 5.88-1.117 8.77l4.785-5.689-.058-.05-3.607-3.035zM14.661.436l-3.838 4.563a.295.295 0 0 1 .027-.01c1.6-.551 3.403.15 4.22 1.626.176.319.323.683.377 1.045.068.446.085.773.012 1.22l-.003.016 3.836-4.561A8.382 8.382 0 0 0 14.67.439l-.009-.003zM9.466 5.868L14.162.285l-.047-.012A8.31 8.31 0 0 0 11.986 0a8.439 8.439 0 0 0-6.169 2.766l-.016.018 3.665 3.084z");
			add_location(path0, file, 31, 209, 1427);
			attr_dev(svg0, "class", "h-4 fill-current text-teal-600 pr-4");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			add_location(svg0, file, 31, 105, 1323);
			attr_dev(p0, "class", "pt-2 text-gray-600 text-xs lg:text-sm flex items-center justify-center lg:justify-start---");
			add_location(p0, file, 31, 3, 1221);
			attr_dev(p1, "class", "pt-8 text-sm");
			add_location(p1, file, 32, 3, 2378);
			attr_dev(span, "class", "mr-5");
			add_location(span, file, 36, 5, 2588);
			attr_dev(path1, "d", "M.92 3.332c-.776 0-1.216.67-.692 1.383l2.537 4.403v7.86c0 2.013 1.467 3.69 3.459 3.69H20.31a3.75 3.75 0 003.69-3.69V7.043a3.723 3.723 0 00-3.668-3.71zm5.786 3.71H20.1c.587 0 1.153.357 1.153.923 0 .566-.566.922-1.153.922H6.706c-.587 0-1.153-.356-1.153-.922 0-.566.566-.923 1.153-.923zm0 3.69H20.1c.587 0 1.153.356 1.153.922 0 .566-.566.922-1.153.922H6.706c-.587 0-1.153-.356-1.153-.922 0-.566.566-.922 1.153-.922zm-.021 3.71h9.705c.587 0 1.153.356 1.153.922 0 .566-.566.923-1.153.923H6.685c-.587 0-1.153-.357-1.153-.923 0-.566.566-.922 1.153-.922Z");
			add_location(path1, file, 38, 6, 2748);
			attr_dev(svg1, "class", "h-6 fill-current text-white-600");
			attr_dev(svg1, "role", "img");
			attr_dev(svg1, "viewBox", "0 0 24 24");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg1, file, 37, 5, 2630);
			attr_dev(a, "href", "about");
			attr_dev(a, "class", "bg-teal-600 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-full flex m-auto w-48 justify-center");
			add_location(a, file, 35, 4, 2452);
			attr_dev(div3, "class", "pt-12 pb-8");
			add_location(div3, file, 34, 3, 2423);
			attr_dev(div4, "class", "mt-6 pb-16 lg:pb-0 w-4/5 lg:w-full mx-auto flex flex-wrap items-center justify-between");
			add_location(div4, file, 43, 3, 3343);
			attr_dev(div5, "class", "p-4 md:p-12 text-center lg:text-left---");
			add_location(div5, file, 25, 2, 815);
			attr_dev(div6, "id", "profile");
			attr_dev(div6, "class", "w-full lg:w-3/5 rounded-lg lg:rounded-l-lg lg:rounded-r-none shadow-2xl--- bg-transparent opacity-75 mx-6 lg:mx-0");
			add_location(div6, file, 23, 1, 670);
			attr_dev(div7, "class", "max-w-4xl flex items-center h-auto lg:h-screen flex-wrap mx-auto my-32 lg:my-0 text-gray-900");
			add_location(div7, file, 13, 0, 173);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div7, anchor);
			append_dev(div7, div0);
			append_dev(div0, img);
			append_dev(div7, t1);
			append_dev(div7, div6);
			append_dev(div6, div5);
			append_dev(div5, div1);
			append_dev(div5, t2);
			append_dev(div5, h1);
			append_dev(h1, t3);
			append_dev(div5, t4);
			append_dev(div5, div2);
			append_dev(div5, t5);
			append_dev(div5, p0);
			append_dev(p0, svg0);
			append_dev(svg0, path0);
			append_dev(p0, t6);
			append_dev(p0, t7);
			append_dev(div5, t8);
			append_dev(div5, p1);
			append_dev(p1, t9);
			append_dev(div5, t10);
			append_dev(div5, div3);
			append_dev(div3, a);
			append_dev(a, span);
			append_dev(span, t11);
			append_dev(a, t12);
			append_dev(a, svg1);
			append_dev(svg1, path1);
			append_dev(div5, t13);
			append_dev(div5, div4);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div4, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*me*/ 0) && title_value !== (title_value = me.name)) {
				document.title = title_value;
			}

			if (dirty & /*me*/ 0) {
				each_value = me.socialNetworks;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div4, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (div7_outro) div7_outro.end(1);
				if (!div7_intro) div7_intro = create_in_transition(div7, fly, { y: -500, duration: 500, delay: 500 });
				div7_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			if (div7_intro) div7_intro.invalidate();
			div7_outro = create_out_transition(div7, fly, { y: -500, duration: 500 });
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div7);
			destroy_each(each_blocks, detaching);
			if (detaching && div7_outro) div7_outro.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);
	$$self.$capture_state = () => ({ fade, fly, me });
	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMGU2MzBjZWQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGZhZGUsIGZseSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuXHRpbXBvcnQgbWUgZnJvbSAnLi4vbWUuanNvbidcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPnsgbWUubmFtZSB9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxkaXYgaW46Zmx5PXt7IHk6IC01MDAsIGR1cmF0aW9uOiA1MDAsIGRlbGF5OiA1MDAgfX0gb3V0OmZseT17eyB5OiAtNTAwLCBkdXJhdGlvbjogNTAwIH19IGNsYXNzPVwibWF4LXctNHhsIGZsZXggaXRlbXMtY2VudGVyIGgtYXV0byBsZzpoLXNjcmVlbiBmbGV4LXdyYXAgbXgtYXV0byBteS0zMiBsZzpteS0wIHRleHQtZ3JheS05MDBcIj5cblxuXHQ8IS0tSW1nIENvbC0tPlxuXHQ8ZGl2IGNsYXNzPVwidy1mdWxsIGxnOnctMi81XCI+XG5cdFx0PCEtLSBCaWcgcHJvZmlsZSBpbWFnZSBmb3Igc2lkZSBiYXIgKGRlc2t0b3ApIC0tPlxuXHRcdDxpbWcgc3JjPVwiaW1hZ2VzL2ZvdG8tbW9iaWxlLmpwZ1wiIGNsYXNzPVwicm91bmRlZC1ub25lIGxnOnJvdW5kZWQtZnVsbCBzaGFkb3ctMnhsIGhpZGRlbiBsZzpibG9ja1wiIGFsdD1cIkZPVE9cIj5cblx0XHQ8IS0tIEltYWdlIGZyb206IGh0dHA6Ly91bnNwbGFzaC5jb20vcGhvdG9zL01QMElVZndybjBBIC0tPlxuXHQ8L2Rpdj5cbiAgICBcblx0PCEtLU1haW4gQ29sLS0+XG5cdDxkaXYgaWQ9XCJwcm9maWxlXCIgY2xhc3M9XCJ3LWZ1bGwgbGc6dy0zLzUgcm91bmRlZC1sZyBsZzpyb3VuZGVkLWwtbGcgbGc6cm91bmRlZC1yLW5vbmUgc2hhZG93LTJ4bC0tLSBiZy10cmFuc3BhcmVudCBvcGFjaXR5LTc1IG14LTYgbGc6bXgtMFwiPlxuXHRcblx0XHQ8ZGl2IGNsYXNzPVwicC00IG1kOnAtMTIgdGV4dC1jZW50ZXIgbGc6dGV4dC1sZWZ0LS0tXCI+XG5cdFx0XHQ8IS0tIEltYWdlIGZvciBtb2JpbGUgdmlldy0tPlxuXHRcdFx0PGRpdiBjbGFzcz1cImJsb2NrIGxnOmhpZGRlbiByb3VuZGVkLWZ1bGwgc2hhZG93LXhsIG14LWF1dG8gLW10LTE2IGgtNDggdy00OCBiZy1jb3ZlciBiZy1jZW50ZXJcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaW1hZ2VzL2ZvdG8tbW9iaWxlLmpwZycpXCI+PC9kaXY+XG5cdFx0XHRcblx0XHRcdDxoMSBjbGFzcz1cInRleHQtM3hsIGZvbnQtYm9sZCBwdC04IGxnOnB0LTBcIj57IG1lLnByb2Zlc3Npb24gfTwvaDE+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwibXgtYXV0byB3LTQvNSBwdC0zIGJvcmRlci1iLTIgYm9yZGVyLXRlYWwtNTAwIG9wYWNpdHktMjVcIj48L2Rpdj5cblx0XHRcdDxwIGNsYXNzPVwicHQtMiB0ZXh0LWdyYXktNjAwIHRleHQteHMgbGc6dGV4dC1zbSBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBsZzpqdXN0aWZ5LXN0YXJ0LS0tXCI+PHN2ZyBjbGFzcz1cImgtNCBmaWxsLWN1cnJlbnQgdGV4dC10ZWFsLTYwMCBwci00XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE5LjUyNyA0Ljc5OWMxLjIxMiAyLjYwOC45MzcgNS42NzgtLjQwNSA4LjE3My0xLjEwMSAyLjA0Ny0yLjc0NCAzLjc0LTQuMDk4IDUuNjE0LS42MTkuODU4LTEuMjQ0IDEuNzUtMS42NjkgMi43MjctLjE0MS4zMjUtLjI2My42NTgtLjM4My45OTItLjEyMS4zMzMtLjIyNC42NzMtLjM0IDEuMDA4LS4xMDkuMzE0LS4yMzYuNjg0LS42MjcuNjg3aC0uMDA3Yy0uNDY2LS4wMDEtLjU3OS0uNTMtLjY5NS0uODg3LS4yODQtLjg3NC0uNTgxLTEuNzEzLTEuMDE5LTIuNTI1LS41MS0uOTQ0LTEuMTQ1LTEuODE3LTEuNzktMi42NzFMMTkuNTI3IDQuNzk5ek04LjU0NSA3LjcwNWwtMy45NTkgNC43MDdjLjcyNCAxLjU0IDEuODIxIDIuODYzIDIuODcxIDQuMTguMjQ3LjMxLjQ5NC42MjIuNzM3LjkzNmw0Ljk4NC01LjkyNS0uMDI5LjAxYy0xLjc0MS42MDEtMy42OTEtLjI5MS00LjM5Mi0xLjk4N2EzLjM3NyAzLjM3NyAwIDAgMS0uMjA5LS43MTZjLS4wNjMtLjQzNy0uMDc3LS43NjEtLjAwNC0xLjE5OGwuMDAxLS4wMDd6TTUuNDkyIDMuMTQ5bC0uMDAzLjAwNGMtMS45NDcgMi40NjYtMi4yODEgNS44OC0xLjExNyA4Ljc3bDQuNzg1LTUuNjg5LS4wNTgtLjA1LTMuNjA3LTMuMDM1ek0xNC42NjEuNDM2bC0zLjgzOCA0LjU2M2EuMjk1LjI5NSAwIDAgMSAuMDI3LS4wMWMxLjYtLjU1MSAzLjQwMy4xNSA0LjIyIDEuNjI2LjE3Ni4zMTkuMzIzLjY4My4zNzcgMS4wNDUuMDY4LjQ0Ni4wODUuNzczLjAxMiAxLjIybC0uMDAzLjAxNiAzLjgzNi00LjU2MUE4LjM4MiA4LjM4MiAwIDAgMCAxNC42Ny40MzlsLS4wMDktLjAwM3pNOS40NjYgNS44NjhMMTQuMTYyLjI4NWwtLjA0Ny0uMDEyQTguMzEgOC4zMSAwIDAgMCAxMS45ODYgMGE4LjQzOSA4LjQzOSAwIDAgMC02LjE2OSAyLjc2NmwtLjAxNi4wMTggMy42NjUgMy4wODR6XCIvPjwvc3ZnPiB7IG1lLmxvY2F0aW9uIH08L3A+XG5cdFx0XHQ8cCBjbGFzcz1cInB0LTggdGV4dC1zbVwiPnsgbWUuaW50cm8gfTwvcD5cblxuXHRcdFx0PGRpdiBjbGFzcz1cInB0LTEyIHBiLThcIj5cblx0XHRcdFx0PGEgaHJlZj1cImFib3V0XCIgY2xhc3M9XCJiZy10ZWFsLTYwMCBob3ZlcjpiZy10ZWFsLTcwMCB0ZXh0LXdoaXRlIGZvbnQtYm9sZCBweS0yIHB4LTQgcm91bmRlZC1mdWxsIGZsZXggbS1hdXRvIHctNDgganVzdGlmeS1jZW50ZXJcIj5cblx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cIm1yLTVcIj5Db250YWN0IG1lPC9zcGFuPlxuXHRcdFx0XHRcdDxzdmcgY2xhc3M9XCJoLTYgZmlsbC1jdXJyZW50IHRleHQtd2hpdGUtNjAwXCIgcm9sZT1cImltZ1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG5cdFx0XHRcdFx0XHQ8cGF0aCBkPVwiTS45MiAzLjMzMmMtLjc3NiAwLTEuMjE2LjY3LS42OTIgMS4zODNsMi41MzcgNC40MDN2Ny44NmMwIDIuMDEzIDEuNDY3IDMuNjkgMy40NTkgMy42OUgyMC4zMWEzLjc1IDMuNzUgMCAwMDMuNjktMy42OVY3LjA0M2EzLjcyMyAzLjcyMyAwIDAwLTMuNjY4LTMuNzF6bTUuNzg2IDMuNzFIMjAuMWMuNTg3IDAgMS4xNTMuMzU3IDEuMTUzLjkyMyAwIC41NjYtLjU2Ni45MjItMS4xNTMuOTIySDYuNzA2Yy0uNTg3IDAtMS4xNTMtLjM1Ni0xLjE1My0uOTIyIDAtLjU2Ni41NjYtLjkyMyAxLjE1My0uOTIzem0wIDMuNjlIMjAuMWMuNTg3IDAgMS4xNTMuMzU2IDEuMTUzLjkyMiAwIC41NjYtLjU2Ni45MjItMS4xNTMuOTIySDYuNzA2Yy0uNTg3IDAtMS4xNTMtLjM1Ni0xLjE1My0uOTIyIDAtLjU2Ni41NjYtLjkyMiAxLjE1My0uOTIyem0tLjAyMSAzLjcxaDkuNzA1Yy41ODcgMCAxLjE1My4zNTYgMS4xNTMuOTIyIDAgLjU2Ni0uNTY2LjkyMy0xLjE1My45MjNINi42ODVjLS41ODcgMC0xLjE1My0uMzU3LTEuMTUzLS45MjMgMC0uNTY2LjU2Ni0uOTIyIDEuMTUzLS45MjJaXCIvPlxuXHRcdFx0XHRcdDwvc3ZnPlxuXHRcdFx0XHQ8L2E+IFxuXHRcdFx0PC9kaXY+XG5cblx0XHRcdDxkaXYgY2xhc3M9XCJtdC02IHBiLTE2IGxnOnBiLTAgdy00LzUgbGc6dy1mdWxsIG14LWF1dG8gZmxleCBmbGV4LXdyYXAgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiPlxuXHRcdFx0XHR7I2VhY2ggbWUuc29jaWFsTmV0d29ya3MgYXMgc29jaWFsTmV0d29yayB9XG5cdFx0XHRcdFx0eyNpZiBzb2NpYWxOZXR3b3JrLnVybCB9XG5cdFx0XHRcdFx0XHQ8YSBjbGFzcz1cImxpbmtcIiBocmVmPXtzb2NpYWxOZXR3b3JrLnVybH0gdGFyZ2V0PVwiX2JsYW5rXCI+XG5cdFx0XHRcdFx0XHRcdDxzdmcgY2xhc3M9XCJoLTYgZmlsbC1jdXJyZW50IHRleHQtZ3JheS02MDAgaG92ZXI6e3NvY2lhbE5ldHdvcmsuY29sb3J9XCIgcm9sZT1cImltZ1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG5cdFx0XHRcdFx0XHRcdFx0PHRpdGxlPnsgc29jaWFsTmV0d29yay50aXRsZSB9PC90aXRsZT5cblx0XHRcdFx0XHRcdFx0XHQ8cGF0aCBkPXtzb2NpYWxOZXR3b3JrLnN2Z30vPlxuXHRcdFx0XHRcdFx0XHQ8L3N2Zz5cblx0XHRcdFx0XHRcdDwvYT5cblx0XHRcdFx0XHR7L2lmfVxuXHRcdFx0XHR7L2VhY2h9XG5cblx0XHRcdFx0PCEtLSBVc2UgaHR0cHM6Ly9zaW1wbGVpY29ucy5vcmcvIHRvIGZpbmQgdGhlIHN2ZyBmb3IgeW91ciBwcmVmZXJyZWQgcHJvZHVjdCAtLT4gXG5cdFx0XHQ8L2Rpdj5cblxuXHRcdDwvZGl2PlxuXG5cdDwvZGl2PlxuXG48L2Rpdj4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQWdEaUIsR0FBYSxJQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3REFDbkIsR0FBYSxJQUFDLEdBQUc7O3dHQUZ1QixHQUFhLElBQUMsS0FBSzs7Ozs7O3dEQURoRCxHQUFhLElBQUMsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBRG5DLEdBQWEsSUFBQyxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7O3lCQUFqQixHQUFhLElBQUMsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBaEJzQixFQUFFLENBQUMsVUFBVTs7Ozs7Ozs7O2dCQUVxakMsRUFBRSxDQUFDLFFBQVE7Ozs7Z0JBQ2ptQyxFQUFFLENBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7O2dDQXRCM0IsRUFBRSxDQUFDLElBQUk7a0JBa0NOLEVBQUUsQ0FBQyxjQUFjOzs7O2dDQUF0QixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3RUFsQ0EsRUFBRSxDQUFDLElBQUk7Ozs7O2lCQWtDTixFQUFFLENBQUMsY0FBYzs7OzsrQkFBdEIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7OztvQ0FBSixNQUFJOzs7Ozs7OztvRUEvQkssQ0FBQyxHQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxHQUFHOzs7Ozs7OzttREFBZSxDQUFDLEdBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
