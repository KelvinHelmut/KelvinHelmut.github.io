import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_each_argument, a as validate_slots, e as empty, b as insert_dev, c as detach_dev, f as space, g as element, t as text, h as svg_element, q as query_selector_all, j as claim_space, k as claim_element, l as children, m as claim_text, n as attr_dev, o as add_location, r as append_dev, u as add_render_callback, w as create_in_transition, x as create_out_transition, y as destroy_each, z as noop } from './client.416d1dad.js';
import { f as fade, a as fly } from './index.35d5c276.js';
import { m as me } from './me.6da87f02.js';

/* src/routes/about.svelte generated by Svelte v3.23.2 */
const file = "src/routes/about.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	return child_ctx;
}

// (50:4) {#if socialNetwork.url}
function create_if_block(ctx) {
	let div;
	let a;
	let svg;
	let path;
	let path_d_value;
	let t0;
	let h1;
	let t1_value = /*socialNetwork*/ ctx[0].user + "";
	let t1;
	let a_href_value;
	let a_class_value;
	let t2;

	const block = {
		c: function create() {
			div = element("div");
			a = element("a");
			svg = svg_element("svg");
			path = svg_element("path");
			t0 = space();
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			a = claim_element(div_nodes, "A", { href: true, class: true, target: true });
			var a_nodes = children(a);
			svg = claim_element(a_nodes, "svg", { class: true, viewBox: true }, 1);
			var svg_nodes = children(svg);
			path = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t0 = claim_space(a_nodes);
			h1 = claim_element(a_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path, "d", path_d_value = /*socialNetwork*/ ctx[0].svg);
			add_location(path, file, 53, 8, 3850);
			attr_dev(svg, "class", "h-6 w-6 fill-current");
			attr_dev(svg, "viewBox", "0 0 24 24");
			add_location(svg, file, 52, 7, 3787);
			attr_dev(h1, "class", "px-2 text-sm");
			add_location(h1, file, 55, 7, 3902);
			attr_dev(a, "href", a_href_value = /*socialNetwork*/ ctx[0].url);
			attr_dev(a, "class", a_class_value = "flex hover:" + /*socialNetwork*/ ctx[0].color);
			attr_dev(a, "target", "_blank");
			add_location(a, file, 51, 6, 3690);
			attr_dev(div, "class", "flex items-center mt-4 text-gray-700");
			add_location(div, file, 50, 5, 3633);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, a);
			append_dev(a, svg);
			append_dev(svg, path);
			append_dev(a, t0);
			append_dev(a, h1);
			append_dev(h1, t1);
			append_dev(div, t2);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(50:4) {#if socialNetwork.url}",
		ctx
	});

	return block;
}

// (49:3) {#each me.socialNetworks as socialNetwork}
function create_each_block(ctx) {
	let if_block_anchor;
	let if_block = /*socialNetwork*/ ctx[0].url && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*socialNetwork*/ ctx[0].url) if_block.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(49:3) {#each me.socialNetworks as socialNetwork}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t0;
	let div6;
	let div4;
	let div3;
	let h10;
	let t1_value = me.name + "";
	let t1;
	let t2;
	let p;
	let t3_value = me.profession + "";
	let t3;
	let t4;
	let div0;
	let svg0;
	let path0;
	let t5;
	let h11;
	let t6;
	let t7;
	let div1;
	let a0;
	let svg1;
	let path1;
	let t8;
	let h12;
	let t9_value = me.email + "";
	let t9;
	let a0_href_value;
	let t10;
	let div2;
	let a1;
	let svg2;
	let path2;
	let t11;
	let h13;
	let t12_value = me.phone + "";
	let t12;
	let a1_href_value;
	let t13;
	let t14;
	let div5;
	let iframe;
	let iframe_src_value;
	let div6_intro;
	let div6_outro;
	let current;
	document.title = title_value = me.name;
	let each_value = me.socialNetworks;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			div6 = element("div");
			div4 = element("div");
			div3 = element("div");
			h10 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			p = element("p");
			t3 = text(t3_value);
			t4 = space();
			div0 = element("div");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t5 = space();
			h11 = element("h1");
			t6 = text("Arequipa - Perú");
			t7 = space();
			div1 = element("div");
			a0 = element("a");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t8 = space();
			h12 = element("h1");
			t9 = text(t9_value);
			t10 = space();
			div2 = element("div");
			a1 = element("a");
			svg2 = svg_element("svg");
			path2 = svg_element("path");
			t11 = space();
			h13 = element("h1");
			t12 = text(t12_value);
			t13 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t14 = space();
			div5 = element("div");
			iframe = element("iframe");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-sq2wwz\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			h10 = claim_element(div3_nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t1 = claim_text(h10_nodes, t1_value);
			h10_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			p = claim_element(div3_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, t3_value);
			p_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			svg0 = claim_element(div0_nodes, "svg", { class: true, viewBox: true }, 1);
			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			t5 = claim_space(div0_nodes);
			h11 = claim_element(div0_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t6 = claim_text(h11_nodes, "Arequipa - Perú");
			h11_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t7 = claim_space(div3_nodes);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			a0 = claim_element(div1_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			svg1 = claim_element(a0_nodes, "svg", { class: true, viewBox: true }, 1);
			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			t8 = claim_space(a0_nodes);
			h12 = claim_element(a0_nodes, "H1", { class: true });
			var h12_nodes = children(h12);
			t9 = claim_text(h12_nodes, t9_value);
			h12_nodes.forEach(detach_dev);
			a0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t10 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			a1 = claim_element(div2_nodes, "A", { href: true, class: true, target: true });
			var a1_nodes = children(a1);
			svg2 = claim_element(a1_nodes, "svg", { class: true, viewBox: true }, 1);
			var svg2_nodes = children(svg2);
			path2 = claim_element(svg2_nodes, "path", { d: true }, 1);
			children(path2).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			t11 = claim_space(a1_nodes);
			h13 = claim_element(a1_nodes, "H1", { class: true });
			var h13_nodes = children(h13);
			t12 = claim_text(h13_nodes, t12_value);
			h13_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t13 = claim_space(div3_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div3_nodes);
			}

			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t14 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);

			iframe = claim_element(div5_nodes, "IFRAME", {
				title: true,
				src: true,
				class: true,
				frameborder: true
			});

			children(iframe).forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h10, "class", "text-2xl font-semibold text-gray-800");
			add_location(h10, file, 23, 12, 1265);
			attr_dev(p, "class", "py-2 text-lg text-gray-700");
			add_location(p, file, 24, 12, 1343);
			attr_dev(path0, "d", "M256 32c-88.004 0-160 70.557-160 156.801C96 306.4 256 480 256 480s160-173.6 160-291.199C416 102.557 344.004 32 256 32zm0 212.801c-31.996 0-57.144-24.645-57.144-56 0-31.357 25.147-56 57.144-56s57.144 24.643 57.144 56c0 31.355-25.148 56-57.144 56z");
			add_location(path0, file, 27, 20, 1559);
			attr_dev(svg0, "class", "h-6 w-6 fill-current");
			attr_dev(svg0, "viewBox", "0 0 512 512");
			add_location(svg0, file, 26, 16, 1482);
			attr_dev(h11, "class", "px-2 text-sm");
			add_location(h11, file, 29, 16, 1856);
			attr_dev(div0, "class", "flex items-center mt-4 text-gray-700");
			add_location(div0, file, 25, 12, 1415);
			attr_dev(path1, "d", "M437.332 80H74.668C51.199 80 32 99.198 32 122.667v266.666C32 412.802 51.199 432 74.668 432h362.664C460.801 432 480 412.802 480 389.333V122.667C480 99.198 460.801 80 437.332 80zM432 170.667L256 288 80 170.667V128l176 117.333L432 128v42.667z");
			add_location(path1, file, 34, 6, 2120);
			attr_dev(svg1, "class", "h-6 w-6 fill-current");
			attr_dev(svg1, "viewBox", "0 0 512 512");
			add_location(svg1, file, 33, 5, 2057);
			attr_dev(h12, "class", "px-2 text-sm");
			add_location(h12, file, 36, 17, 2401);
			attr_dev(a0, "href", a0_href_value = "mailto:" + me.email);
			attr_dev(a0, "class", "flex hover:text-blue-600");
			add_location(a0, file, 32, 4, 1988);
			attr_dev(div1, "class", "flex items-center mt-4 text-gray-700");
			add_location(div1, file, 31, 12, 1933);
			attr_dev(path2, "d", "M256,32c123.5,0,224,100.5,224,224S379.5,480,256,480S32,379.5,32,256S132.5,32,256,32 M256,0C114.625,0,0,114.625,0,256 s114.625,256,256,256s256-114.625,256-256S397.375,0,256,0L256,0z M398.719,341.594l-1.438-4.375 c-3.375-10.062-14.5-20.562-24.75-23.375L334.688,303.5c-10.25-2.781-24.875,0.969-32.405,8.5l-13.688,13.688 c-49.75-13.469-88.781-52.5-102.219-102.25l13.688-13.688c7.5-7.5,11.25-22.125,8.469-32.406L198.219,139.5 c-2.781-10.25-13.344-21.375-23.406-24.75l-4.313-1.438c-10.094-3.375-24.5,0.031-32,7.563l-20.5,20.5 c-3.656,3.625-6,14.031-6,14.063c-0.688,65.063,24.813,127.719,70.813,173.75c45.875,45.875,108.313,71.345,173.156,70.781 c0.344,0,11.063-2.281,14.719-5.938l20.5-20.5C398.688,366.062,402.062,351.656,398.719,341.594z");
			add_location(path2, file, 42, 6, 2708);
			attr_dev(svg2, "class", "h-6 w-6 fill-current");
			attr_dev(svg2, "viewBox", "0 0 512 512");
			add_location(svg2, file, 41, 5, 2645);
			attr_dev(h13, "class", "px-2 text-sm");
			add_location(h13, file, 44, 17, 3482);
			attr_dev(a1, "href", a1_href_value = "https://api.whatsapp.com/send?phone=" + me.phone);
			attr_dev(a1, "class", "flex hover:text-green-700");
			attr_dev(a1, "target", "_blank");
			add_location(a1, file, 40, 4, 2530);
			attr_dev(div2, "class", "flex items-center mt-4 text-gray-700");
			add_location(div2, file, 39, 3, 2475);
			attr_dev(div3, "class", "py-4 px-6");
			add_location(div3, file, 22, 8, 1229);
			attr_dev(div4, "class", "w-full lg:w-1/4 m-auto bg-transparent overflow-hidden my-4");
			add_location(div4, file, 15, 1, 312);
			attr_dev(iframe, "title", "CV");
			if (iframe.src !== (iframe_src_value = "/CV.pdf")) attr_dev(iframe, "src", iframe_src_value);
			attr_dev(iframe, "class", "w-full md:h-full h-64");
			attr_dev(iframe, "frameborder", "0");
			add_location(iframe, file, 64, 2, 4068);
			attr_dev(div5, "class", "w-full lg:w-3/4 lg:ml-10");
			add_location(div5, file, 63, 1, 4027);
			attr_dev(div6, "class", "sm:flex p-6 w-full xl:w-10/12 m-auto");
			add_location(div6, file, 13, 0, 174);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, div4);
			append_dev(div4, div3);
			append_dev(div3, h10);
			append_dev(h10, t1);
			append_dev(div3, t2);
			append_dev(div3, p);
			append_dev(p, t3);
			append_dev(div3, t4);
			append_dev(div3, div0);
			append_dev(div0, svg0);
			append_dev(svg0, path0);
			append_dev(div0, t5);
			append_dev(div0, h11);
			append_dev(h11, t6);
			append_dev(div3, t7);
			append_dev(div3, div1);
			append_dev(div1, a0);
			append_dev(a0, svg1);
			append_dev(svg1, path1);
			append_dev(a0, t8);
			append_dev(a0, h12);
			append_dev(h12, t9);
			append_dev(div3, t10);
			append_dev(div3, div2);
			append_dev(div2, a1);
			append_dev(a1, svg2);
			append_dev(svg2, path2);
			append_dev(a1, t11);
			append_dev(a1, h13);
			append_dev(h13, t12);
			append_dev(div3, t13);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div3, null);
			}

			append_dev(div6, t14);
			append_dev(div6, div5);
			append_dev(div5, iframe);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*me*/ 0) && title_value !== (title_value = me.name)) {
				document.title = title_value;
			}

			if (dirty & /*me*/ 0) {
				each_value = me.socialNetworks;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div3, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (div6_outro) div6_outro.end(1);
				if (!div6_intro) div6_intro = create_in_transition(div6, fly, { y: -500, duration: 500, delay: 500 });
				div6_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			if (div6_intro) div6_intro.invalidate();
			div6_outro = create_out_transition(div6, fly, { y: -500, duration: 500 });
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div6);
			destroy_each(each_blocks, detaching);
			if (detaching && div6_outro) div6_outro.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);
	$$self.$capture_state = () => ({ fade, fly, me });
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuMzM2MTZiN2IuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYWJvdXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGZhZGUsIGZseSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuXHRpbXBvcnQgbWUgZnJvbSAnLi4vbWUuanNvbidcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdFxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+eyBtZS5uYW1lIH08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBpbjpmbHk9e3sgeTogLTUwMCwgZHVyYXRpb246IDUwMCwgZGVsYXk6IDUwMCB9fSBvdXQ6Zmx5PXt7IHk6IC01MDAsIGR1cmF0aW9uOiA1MDAgfX0gY2xhc3M9XCJzbTpmbGV4IHAtNiB3LWZ1bGwgeGw6dy0xMC8xMiBtLWF1dG9cIj5cblxuXHQ8ZGl2IGNsYXNzPVwidy1mdWxsIGxnOnctMS80IG0tYXV0byBiZy10cmFuc3BhcmVudCBvdmVyZmxvdy1oaWRkZW4gbXktNFwiPlxuICAgICAgICA8IS0tIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBweC02IHB5LTMgYmctdGVhbC05MDBcIj5cbiAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJoLTYgdy02IHRleHQtd2hpdGUgZmlsbC1jdXJyZW50XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNLjkyIDMuMzMyYy0uNzc2IDAtMS4yMTYuNjctLjY5MiAxLjM4M2wyLjUzNyA0LjQwM3Y3Ljg2YzAgMi4wMTMgMS40NjcgMy42OSAzLjQ1OSAzLjY5SDIwLjMxYTMuNzUgMy43NSAwIDAwMy42OS0zLjY5VjcuMDQzYTMuNzIzIDMuNzIzIDAgMDAtMy42NjgtMy43MXptNS43ODYgMy43MUgyMC4xYy41ODcgMCAxLjE1My4zNTcgMS4xNTMuOTIzIDAgLjU2Ni0uNTY2LjkyMi0xLjE1My45MjJINi43MDZjLS41ODcgMC0xLjE1My0uMzU2LTEuMTUzLS45MjIgMC0uNTY2LjU2Ni0uOTIzIDEuMTUzLS45MjN6bTAgMy42OUgyMC4xYy41ODcgMCAxLjE1My4zNTYgMS4xNTMuOTIyIDAgLjU2Ni0uNTY2LjkyMi0xLjE1My45MjJINi43MDZjLS41ODcgMC0xLjE1My0uMzU2LTEuMTUzLS45MjIgMC0uNTY2LjU2Ni0uOTIyIDEuMTUzLS45MjJ6bS0uMDIxIDMuNzFoOS43MDVjLjU4NyAwIDEuMTUzLjM1NiAxLjE1My45MjIgMCAuNTY2LS41NjYuOTIzLTEuMTUzLjkyM0g2LjY4NWMtLjU4NyAwLTEuMTUzLS4zNTctMS4xNTMtLjkyMyAwLS41NjYuNTY2LS45MjIgMS4xNTMtLjkyMlpcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDxoMSBjbGFzcz1cIm14LTMgdGV4dC13aGl0ZSBmb250LXNlbWlib2xkIHRleHQtbGdcIj5Db250YWN0IG1lPC9oMT5cbiAgICAgICAgPC9kaXY+IC0tPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicHktNCBweC02XCI+XG4gICAgICAgICAgICA8aDEgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDBcIj57IG1lLm5hbWUgfTwvaDE+XG4gICAgICAgICAgICA8cCBjbGFzcz1cInB5LTIgdGV4dC1sZyB0ZXh0LWdyYXktNzAwXCI+eyBtZS5wcm9mZXNzaW9uIH08L3A+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgbXQtNCB0ZXh0LWdyYXktNzAwXCI+XG4gICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz1cImgtNiB3LTYgZmlsbC1jdXJyZW50XCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMjU2IDMyYy04OC4wMDQgMC0xNjAgNzAuNTU3LTE2MCAxNTYuODAxQzk2IDMwNi40IDI1NiA0ODAgMjU2IDQ4MHMxNjAtMTczLjYgMTYwLTI5MS4xOTlDNDE2IDEwMi41NTcgMzQ0LjAwNCAzMiAyNTYgMzJ6bTAgMjEyLjgwMWMtMzEuOTk2IDAtNTcuMTQ0LTI0LjY0NS01Ny4xNDQtNTYgMC0zMS4zNTcgMjUuMTQ3LTU2IDU3LjE0NC01NnM1Ny4xNDQgMjQuNjQzIDU3LjE0NCA1NmMwIDMxLjM1NS0yNS4xNDggNTYtNTcuMTQ0IDU2elwiLz5cbiAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICA8aDEgY2xhc3M9XCJweC0yIHRleHQtc21cIj5BcmVxdWlwYSAtIFBlcsO6PC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIG10LTQgdGV4dC1ncmF5LTcwMFwiPlxuXHRcdFx0XHQ8YSBocmVmPVwibWFpbHRvOnsgbWUuZW1haWwgfVwiIGNsYXNzPVwiZmxleCBob3Zlcjp0ZXh0LWJsdWUtNjAwXCI+XG5cdFx0XHRcdFx0PHN2ZyBjbGFzcz1cImgtNiB3LTYgZmlsbC1jdXJyZW50XCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCI+XG5cdFx0XHRcdFx0XHQ8cGF0aCBkPVwiTTQzNy4zMzIgODBINzQuNjY4QzUxLjE5OSA4MCAzMiA5OS4xOTggMzIgMTIyLjY2N3YyNjYuNjY2QzMyIDQxMi44MDIgNTEuMTk5IDQzMiA3NC42NjggNDMyaDM2Mi42NjRDNDYwLjgwMSA0MzIgNDgwIDQxMi44MDIgNDgwIDM4OS4zMzNWMTIyLjY2N0M0ODAgOTkuMTk4IDQ2MC44MDEgODAgNDM3LjMzMiA4MHpNNDMyIDE3MC42NjdMMjU2IDI4OCA4MCAxNzAuNjY3VjEyOGwxNzYgMTE3LjMzM0w0MzIgMTI4djQyLjY2N3pcIi8+XG5cdFx0XHRcdFx0PC9zdmc+XG4gICAgICAgICAgICAgICAgXHQ8aDEgY2xhc3M9XCJweC0yIHRleHQtc21cIj57IG1lLmVtYWlsIH08L2gxPlxuXHRcdFx0XHQ8L2E+XG4gICAgICAgICAgICA8L2Rpdj5cblx0XHRcdDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBtdC00IHRleHQtZ3JheS03MDBcIj5cblx0XHRcdFx0PGEgaHJlZj1cImh0dHBzOi8vYXBpLndoYXRzYXBwLmNvbS9zZW5kP3Bob25lPXsgbWUucGhvbmUgfVwiIGNsYXNzPVwiZmxleCBob3Zlcjp0ZXh0LWdyZWVuLTcwMFwiIHRhcmdldD1cIl9ibGFua1wiPlxuXHRcdFx0XHRcdDxzdmcgY2xhc3M9XCJoLTYgdy02IGZpbGwtY3VycmVudFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiPlxuXHRcdFx0XHRcdFx0PHBhdGggZD1cIk0yNTYsMzJjMTIzLjUsMCwyMjQsMTAwLjUsMjI0LDIyNFMzNzkuNSw0ODAsMjU2LDQ4MFMzMiwzNzkuNSwzMiwyNTZTMTMyLjUsMzIsMjU2LDMyIE0yNTYsMEMxMTQuNjI1LDAsMCwxMTQuNjI1LDAsMjU2IHMxMTQuNjI1LDI1NiwyNTYsMjU2czI1Ni0xMTQuNjI1LDI1Ni0yNTZTMzk3LjM3NSwwLDI1NiwwTDI1NiwweiBNMzk4LjcxOSwzNDEuNTk0bC0xLjQzOC00LjM3NSBjLTMuMzc1LTEwLjA2Mi0xNC41LTIwLjU2Mi0yNC43NS0yMy4zNzVMMzM0LjY4OCwzMDMuNWMtMTAuMjUtMi43ODEtMjQuODc1LDAuOTY5LTMyLjQwNSw4LjVsLTEzLjY4OCwxMy42ODggYy00OS43NS0xMy40NjktODguNzgxLTUyLjUtMTAyLjIxOS0xMDIuMjVsMTMuNjg4LTEzLjY4OGM3LjUtNy41LDExLjI1LTIyLjEyNSw4LjQ2OS0zMi40MDZMMTk4LjIxOSwxMzkuNSBjLTIuNzgxLTEwLjI1LTEzLjM0NC0yMS4zNzUtMjMuNDA2LTI0Ljc1bC00LjMxMy0xLjQzOGMtMTAuMDk0LTMuMzc1LTI0LjUsMC4wMzEtMzIsNy41NjNsLTIwLjUsMjAuNSBjLTMuNjU2LDMuNjI1LTYsMTQuMDMxLTYsMTQuMDYzYy0wLjY4OCw2NS4wNjMsMjQuODEzLDEyNy43MTksNzAuODEzLDE3My43NWM0NS44NzUsNDUuODc1LDEwOC4zMTMsNzEuMzQ1LDE3My4xNTYsNzAuNzgxIGMwLjM0NCwwLDExLjA2My0yLjI4MSwxNC43MTktNS45MzhsMjAuNS0yMC41QzM5OC42ODgsMzY2LjA2Miw0MDIuMDYyLDM1MS42NTYsMzk4LjcxOSwzNDEuNTk0elwiLz5cblx0XHRcdFx0XHQ8L3N2Zz5cbiAgICAgICAgICAgICAgICBcdDxoMSBjbGFzcz1cInB4LTIgdGV4dC1zbVwiPnsgbWUucGhvbmUgfTwvaDE+XG5cdFx0XHRcdDwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuXG5cdFx0XHR7I2VhY2ggbWUuc29jaWFsTmV0d29ya3MgYXMgc29jaWFsTmV0d29ya31cblx0XHRcdFx0eyNpZiBzb2NpYWxOZXR3b3JrLnVybH1cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgbXQtNCB0ZXh0LWdyYXktNzAwXCI+XG5cdFx0XHRcdFx0XHQ8YSBocmVmPXsgc29jaWFsTmV0d29yay51cmwgfSBjbGFzcz1cImZsZXggaG92ZXI6eyBzb2NpYWxOZXR3b3JrLmNvbG9yIH1cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cblx0XHRcdFx0XHRcdFx0PHN2ZyBjbGFzcz1cImgtNiB3LTYgZmlsbC1jdXJyZW50XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9e3NvY2lhbE5ldHdvcmsuc3ZnfSAvPlxuXHRcdFx0XHRcdFx0XHQ8L3N2Zz5cblx0XHRcdFx0XHRcdFx0PGgxIGNsYXNzPVwicHgtMiB0ZXh0LXNtXCI+eyBzb2NpYWxOZXR3b3JrLnVzZXIgfTwvaDE+XG5cdFx0XHRcdFx0XHQ8L2E+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdHsvaWZ9XG5cdFx0XHR7L2VhY2h9XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG5cdDxkaXYgY2xhc3M9XCJ3LWZ1bGwgbGc6dy0zLzQgbGc6bWwtMTBcIj5cblx0XHQ8aWZyYW1lIHRpdGxlPVwiQ1ZcIiBzcmM9XCIvQ1YucGRmXCIgY2xhc3M9XCJ3LWZ1bGwgbWQ6aC1mdWxsIGgtNjRcIiBmcmFtZWJvcmRlcj1cIjBcIiAvPlx0XG5cdDwvZGl2PlxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBdURrQyxHQUFhLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dEQUZuQyxHQUFhLElBQUMsR0FBRzs7Ozs7Ozt3REFGbEIsR0FBYSxJQUFDLEdBQUc7MEVBQXVCLEdBQWEsSUFBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBRmxFLEdBQWEsSUFBQyxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7O3lCQUFqQixHQUFhLElBQUMsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBMUJxQyxFQUFFLENBQUMsSUFBSTs7OztnQkFDbEIsRUFBRSxDQUFDLFVBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBWXJCLEVBQUUsQ0FBQyxLQUFLOzs7Ozs7Ozs7O2lCQVFSLEVBQUUsQ0FBQyxLQUFLOzs7Ozs7Ozs7OztnQ0FsQzFDLEVBQUUsQ0FBQyxJQUFJO2tCQXNDUCxFQUFFLENBQUMsY0FBYzs7OztnQ0FBdEIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0RBaEJhLEVBQUUsQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7aUZBUXFCLEVBQUUsQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3RUE5QmpELEVBQUUsQ0FBQyxJQUFJOzs7OztpQkFzQ1AsRUFBRSxDQUFDLGNBQWM7Ozs7K0JBQXRCLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBQUosTUFBSTs7Ozs7Ozs7b0VBbkNNLENBQUMsR0FBRyxHQUFHLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRzs7Ozs7Ozs7bURBQWUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUUsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
